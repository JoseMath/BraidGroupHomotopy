
KK=QQ
xList={"x1","x2","s1","s2","a1","a2"}/value
mList=(for i to 6-1 list "m"|i)/value
R=KK[xList]**KK[mList]**KK[t]**KK[L0,L1,L2,L3,L4,L5]
xList={"x1","x2","s1","s2","a1","a2"}/value
mList=(for i to 6-1 list "m"|i)/value

f0="(-m0 + a1+a2)"
f1="(-m1 + a1*x1+a2*x2)"
f2="(-m2 + a1*(x1^2+s1)+a2*(x2^2+s2))"
f3="(-m3 + a1*x1*(x1^2+3*s1)+a2*x2*(x2^2+3*s2))"
f4="(-m4+(a1*(x1^2*(x1^2+6*s1)+3*s1^2)+a2*(x2^2*(x2^2+6*s2)+3*s2^2)))"
f5="(-m5+(a1*x1*(x1^2*(x1^2+10*s1)+15*s1^2)+a2*x2*(x2^2*(x2^2+10*s2)+15*s2^2)))"
F={f0,f1,f2,f3,f4,f5}/value
M=flatten entries(matrix makeJac(F,xList)*transpose matrix {{L0,L1,L2,L3,L4,L5}})

--%%--Created a Bertini input file. 
installPackage"Bertini"

makeB'InputFile(theDir,
    B'Polynomials=>F|M,
    AffVariableGroup=>{xList|{m5}},
    HomVariableGroup=>{L0,L1,L2,L3,L4,L5},
    ParameterGroup=>drop(mList,-1),
    B'Configs=>{
	{ParameterHomotopy,1},
	PrintPathProgress=>500,
	{MPTYPE,2}})
runBertini(theDir)


makeB'InputFile(theDir|"/test1",
    B'Polynomials=>F|M,
    AffVariableGroup=>{xList|{m5}},
    HomVariableGroup=>{L0,L1,L2,L3,L4,L5},
    ParameterGroup=>drop(mList,-1),
    B'Configs=>{
	UseRegeneration=>1,
	{ParameterHomotopy,1},
	PrintPathProgress=>500,
	{MPTYPE,2}})
#radicalList(importSolutionsFile(theDir|"/test1")/last,1e-10)
--degree 12. 

writeStartFile(theDir,{startSol})
writeParameterFile(theDir,mVal,NameParameterFile=>"start_parameters")
--1/2*for i in mVal list 2*random CC-1.3*random CC
mVal=1/10*{.400937+.117529*ii, .0539081+.26916*ii, -.106115+.485923*ii, .670329+.201258*ii, .56302+.222341*ii, -.326684+.681606*ii, .271186-.0355098*ii, -.040732+.616021*ii, .617405-.293142*ii, .18965-.335098*ii, -.0578829-.0842445*ii, .00360714-.00118149*ii}
writeParameterFile(theDir,mVal,NameParameterFile=>"final_parameters")
runBertini(theDir)
oneStartPoint=importSolutionsFile(theDir)
options importSolutionsFile
--oneStartPoint={{ -.17118458554248-.206354003372355*ii, -.27253757527036+.155166002009375*ii, -.146962663906988-.212043956978075*ii, .478150218165148-.154634645880002*ii, -.507579084746236-.946701813600176*ii, 1.05200167853779+.681308960526177*ii, 1.35954031401276+.1140068666071*ii, -.768793174242727+.261243076777618*ii, -2.27536227579969-.940660180573824*ii, 3.25095724078372-.763109345316504*ii, -.872705409126759+3.7290775130345*ii, -.0627958558572613-2.01355508714417*ii}}


--%%--Use monodromy to collect new solutions 
bertiniImageMonodromyCollect(theDir,
    MonodromyStartPoints=>oneStartPoint,
    MonodromyStartParameters=>mVal,
    NumberOfLoops=>17,
    NumSolBound=>11025,
    AffVariableGroup=>xList,
    ImageCoordinates=>{"x1+ x2+ x3+ x4"},  	     
    ReturnPoints=>false        );
--264600=11025 * 24! is the goal.
--Thus far we have found 9119 solutions.
--We need to check that these are distinct. 

runBertini("/Users/jo/Desktop/Dump/NewRound",NameB'InputFile=>"input_Image_Map_JADE")
symXCoords= sort flatten importSolutionsFile("/Users/jo/Desktop/Dump/NewRound",NameSolutionsFile=>"function");
symXCoordsB=flatten for i to #(symXCoords)-1 list if abs(symXCoords_i-(symXCoords|{100})_(i+1))>1e-8 then {symXCoords_i} else {};
allSymXCoords=symXCoordsB;
r2Dir="/Users/jo/Desktop/Dump/NewRound"

mVal=1/10*{.400937+.117529*ii, .0539081+.26916*ii, -.106115+.485923*ii, .670329+.201258*ii, .56302+.222341*ii, -.326684+.681606*ii, .271186-.0355098*ii, -.040732+.616021*ii, .617405-.293142*ii, .18965-.335098*ii, -.0578829-.0842445*ii, .00360714-.00118149*ii}
setLoop=transpose for i in mVal list {random CC,random CC,i}
for i in setLoop do print i
--Loop 0
setLoop={{.937280396706306+.212272926270931*ii, .985611417823531+.888183365454082*ii, 
	.877882020660651+.24288716602307*ii, .486984087561778+.555862808286153*ii,
	 .903294688618471+.202366353141128*ii, .224958324524857+.13097213649095*ii, 
	 .150009669965073+.182405542108673*ii, .153075324177737+.195118333198019*ii,
	  .20170847558133+.933421375114244*ii, .83046983024519+.540758919922605*ii,
	   .772208032004009+.658633577794344*ii, .747359599704329+.227139437106617*ii},
        {.492393660329924+.18969365742338*ii, .774369675891689+.358160127286447*ii,
	     .816039276345217+.330844988149686*ii, .968523992662724+.205647431045906*ii, .341795563664713+.0963343250589271*ii,
	      .46516189206728+.95566138868494*ii, .329111337849441+.480567637622304*ii, .974588795634841+.391370098475193*ii,
	       .772312106175962+.50886449969595*ii, .892548456422884+.478704152576596*ii, .418331482645459+.788459379091471*ii, 
	       .5550405100736+.671473700068414*ii}, {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii,
	        .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii,
	      .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}};
--Loop 1
setLoop={{.209968076861541+.887757688315328*ii, .3484275109566+.360516817215319*ii, .977693361566364+.945851338360568*ii, .204820593126965+.607480420589863*ii, .449243832030098+.537060321192813*ii, .610429179392603+.579631220249767*ii, .323498707032561+.372412056153612*ii, .352119791699045+.788410268949386*ii, .691957760840643+.971938697413197*ii, .0983996677030431+.0169685092999842*ii, .386044407971724+.0412014243131793*ii, .193604605475695+.396735513999104*ii}, 
    {.687663780916356+.472006336517457*ii, .262125397594161+.863106130805485*ii, .376823466099821+.312942345927613*ii, .701304523277834+.83036713792413*ii, .764414753712357+.428098554796373*ii, .374852475477733+.710701128208454*ii, .491148171137406+.284547570966279*ii, .878769302690509+.820735810034262*ii, .601891271012565+.215214050670151*ii, .347471127245354+.100122986446402*ii, .263054926323029+.648223184109869*ii, .968634602745391+.939071486633688*ii}, 
    {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}
--Loop 2
setLoop={{.69083804361886+.0375154234260409*ii, .518120055718068+.520033740475168*ii, .714817459369649+.00853306163452994*ii, .0614658768593306+.840932068604946*ii, .694691044830985+.958175701286996*ii, .145716664064877+.83387341051191*ii, .444175909852693+.955294329932774*ii, .556771576930089+.260769749323456*ii, .815330574559455+.230911623283983*ii, .689766504945517+.357561774045237*ii, .605434291620781+.391300703756717*ii, .763977332012109+.533910169225227*ii},
     {.837236089501298+.0147272350021463*ii, .623527020231827+.209789114299552*ii, .200895432255652+.00133651381087962*ii, .439223590767308+.22278992728619*ii, .715863015801457+.280877287765432*ii, .950349770575727+.534446023896467*ii, .412240290320957+.0941985880051763*ii, .517110640820343+.217304424254048*ii, .529510890489998+.734644491407444*ii, .934854513383757+.782169416354425*ii, .390737179110586+.97359937359874*ii, .0690829741373645+.150311764301502*ii}, 
     {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}
--Loop 4
setLoop={{.748720449305402+.983852849083227*ii, .38624881366516+.126887098716572*ii, .696972454212143+.125896684425312*ii, .168384701834011+.400916545503412*ii, .256645230447373+.117347601617927*ii, .309284662294774+.499021898119588*ii, .617128071854693+.224172584198441*ii, .649764447228136+.0427245877324658*ii, .466191641024146+.0104743090679014*ii, .739718420032001+.341496620429936*ii, .847273656102588+.839754686439093*ii, .365068875441409+.47115112338684*ii},
     {.407402906284199+.714985566738783*ii, .39200367200388+.752719106188424*ii, .831923944204926+.101163478561069*ii, .48389314261202+.469879043878842*ii, .350197118281869+.57053196614741*ii, .444540273627121+.505719817160993*ii, .0409893512212431+.913663213409128*ii, .602237132112036+.126551714558737*ii, .113380165249894+.566819012826573*ii, .158839049536266+.0789009087125516*ii, .425591495235801+.349166117856892*ii, .24085764923964+.808550054326392*ii}, 
     {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}};
setStart=importSolutionsFile(r2Dir|"/startL1",NameSolutionsFile=>"startL1S51");
setFiber=yList0;
--Loop 5
setLoop={{.780700858154192+.213549778960482*ii, .636933550406282+.115972467161243*ii, .725166508939982+.909062287105046*ii, .653541825491001+.97489021265058*ii, .432684168047656+.0818222801922881*ii, .697627084893641+.0357581329089396*ii, .139391286168723+.984081637027892*ii, .786462594617652+.977158635649474*ii, .66943607166491+.908786293373234*ii, .451421306330387+.977004908244013*ii, .293042940623415+.644528498153578*ii, .998769021760155+.527011297543639*ii},
  {.563609109170609+.517906444513094*ii, .0120569555412184+.209038384455525*ii, .232800317886744+.899450571383038*ii, .919841243926983+.31851434813822*ii, .996800473093878+.694487095705785*ii, .898735855568307+.953294655084651*ii, .0969461047696076+.720701820630247*ii, .83092740697464+.358720265646534*ii, .159400287373814+.187938497997982*ii, .816570024777839+.555175155542954*ii, .476119240888588+.0561954135249023*ii, .399057465632153+.891964343974182*ii},
  {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}

allLoops={
{{.438160500783489+.946602795718642*ii, .674041743218944+.568170932347033*ii, .959775922490842+.0113075445062473*ii, .488859536483107+.673607517144131*ii, .735029270546328+.684110888095306*ii, .855584286036492+.484581550135877*ii, .847914247092994+.272862446827418*ii, .34555067039976+.346326772520374*ii, .303182103256541+.770298498920558*ii, .694813613635923+.450800375953648*ii, .870927853242335+.371525612531269*ii, .248549165786379+.600019008794539*ii},
     {.799283915659834+.637119267812325*ii, .29144377720914+.0953445683782611*ii, .147746002702583+.746826342563183*ii, .126289137979147+.69164595416845*ii, .0387963460424158+.270134496962023*ii, .526699071475443+.917768322861684*ii, .763718389011487+.138567331579787*ii, .29297556334157+.83872743019829*ii, .209226682743753+.667882873593638*ii, .729408597968+.880454436840831*ii, .452367743517139+.344867631036321*ii, .590638176656691+.91113648434294*ii}, 
     {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}},
{{.584334760305043+.627610781965328*ii, .351568949601013+.297810000935257*ii, .966415834233171+.359702364912217*ii, .539305613235312+.118280742045535*ii, .19173301406039+.36562918312386*ii, .830420916234224+.078915698949767*ii, .134673543815621+.311256597615657*ii, .601352999641022+.669643409496237*ii, .464083952382607+.94394736728529*ii, .0618436971486144+.966215808832453*ii, .908186177927233+.452305884985199*ii, .950922669720892+.263559032045466*ii},
     {.454646897349667+.108140272453993*ii, .27675146826505+.65383828184452*ii, .366043128095087+.135834153068335*ii, .868099163512737+.250485329090354*ii, .492161458527369+.955608255540525*ii, .796055074940789+.166736752254342*ii, .908954606212797+.00396138368257903*ii, .632954548111373+.248546536606144*ii, .891564850728871+.990088778839975*ii, .37701867130031+.348110177278736*ii, .332825627407814+.724177119082898*ii, .996958933363654+.214895484868987*ii},
     {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}},
{{.109289094710008+.597907394029265*ii, .502695597515519+.452227539328629*ii, .169383226847469+.217072180148192*ii, .607009466053809+.226256300044235*ii, .11822229918614+.0474895086338805*ii, .505544663116336+.756026293380478*ii, .45983682736822+.376169316889721*ii, .409559463550619+.776198585938833*ii, .47473437732343+.19429370741647*ii, .266827026440903+.5467313652357*ii, .147993506868973+.767787197699081*ii, .0871808187551161+.62757862025618*ii},
     {.484626624899849+.0190371066277178*ii, .875850436393956+.0398794732568767*ii, .887894637483256+.408557761755784*ii, .223996919197141+.183179338933748*ii, .353832898307705+.684903035225579*ii, .874674021271124+.572814041031302*ii, .972414651217862+.928514814029403*ii, .127056235146384+.799769484151644*ii, .450110165297174+.598141743625791*ii, .190937543403377+.595435524235976*ii, .989870761734374+.555132880091893*ii, .702500901848613+.0808099395569022*ii},
     {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}},
{{.0893863758069278+.459240813781589*ii, .125895959463035+.99482833857941*ii, .37735220171693+.536153670921216*ii, .228667169582827+.0414507588217435*ii, .731167848623472+.265427617246531*ii, .57806640956315+.113901516178186*ii, .644583375115376+.705436926347863*ii, .626053661858512+.404235193298572*ii, .811301917271215+.705576661502223*ii, .729736663069234+.602020797430615*ii, .179425297634462+.0673809958638902*ii, .65573712545694+.237079432471652*ii}, 
    {.937532313608465+.131056265451326*ii, .239634682942409+.678378502484602*ii, .797693638270335+.441391207253606*ii, .284675458241591+.793693921631723*ii, .470729672170984+.658978967530949*ii, .357167173500427+.155615998484749*ii, .454431968559994+.0164140943862832*ii, .42679611402125+.861260581659545*ii, .282730979684785+.255981579974222*ii, .74847888931036+.179524917890948*ii, .422488330032937+.0302162808493847*ii, .931274068623134+.952198717683713*ii},
    {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}},
{{.0910906706164074+.632905324727215*ii, .466944020570065+.215272092520394*ii, .61375006446646+.32361140617801*ii, .808584606557492+.244370137877243*ii, .951887658872599+.61056358638249*ii, .311246753472427+.71747690960638*ii, .50156583618247+.373069525217204*ii, .434260923682412+.69783943935019*ii, .193171693775979+.414179388696329*ii, .40978478471472+.8782018337888*ii, .107116526370476+.579442304569248*ii, .709289971841439+.0821976384961616*ii},
     {.170709323356691+.647189925461803*ii, .414190727338734+.919543776792805*ii, .345488637466186+.74283513358475*ii, .192653784524243+.471243002958432*ii, .266505022875896+.844227586046678*ii, .714144797964334+.888970899921791*ii, .319343449445455+.661613164622309*ii, .654643695693451+.961227255344605*ii, .576720874825062+.56977272348102*ii, .149221010381506+.627546106501974*ii, .253453775650954+.922530173214354*ii, .0545788149394465+.775007954304308*ii},
     {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}},
{{.788486250872492+.802496784364461*ii, .923178693627515+.317370894939688*ii, .0684170041565765+.149947568617406*ii, .317926938721116+.378557067795744*ii, .400958881496894+.412789188939343*ii, .43636253006848+.644881192102951*ii, .165213282957649+.930663125866257*ii, .924560865362218+.729283460255191*ii, .830862658866314+.064752457653779*ii, .894874486064515+.227760847312895*ii, .305442604836606+.980168154751475*ii, .508019531263495+.66651707514326*ii},
     {.809762300851376+.315522191567691*ii, .103475775679845+.495714154413242*ii, .0478488228126123+.449719407137271*ii, .41842553692378+.464062668316327*ii, .159945870804822+.287999356342207*ii, .3262196515423+.425038491168377*ii, .800348957832086+.932467032426774*ii, .48884098815268+.717685882829567*ii, .471425079282986+.93781113004507*ii, .892593009160266+.58483147249976*ii, .816216493298414+.575604128184794*ii, .0139630774850706+.151981066835632*ii},
     {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}},
{{.73555686974321+.0706526479980492*ii, .548498183259957+.0725359207076006*ii, .163366613900539+.254181106858231*ii, .48527259007565+.273875029878747*ii, .632444214007672+.136125260708913*ii, .707218021459374+.0184588681255092*ii, .438556212930156+.238355778831496*ii, .347703505906007+.464835669689807*ii, .943983462710968+.26284525382567*ii, .956848641320536+.191688174142274*ii, .866578866484486+.26704384012058*ii, .534531449949934+.178964602052611*ii},
     {.24759437425097+.589734696425066*ii, .988946879628583+.511737050569404*ii, .869129782293556+.429360090784819*ii, .874798867283907+.745193320378193*ii, .357736705565978+.113443372993706*ii, .787511649748283+.580446382020858*ii, .294431485166108+.390147607072566*ii, .465274864000634+.0315213694098415*ii, .408971163812952+.472453663062527*ii, .94260358019735+.58850530031664*ii, .47644153690377+.228804321860207*ii, .259876262188386+.906810556177382*ii}, 
     {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}},
{{.949614977282357+.514922007034563*ii, .18642956939906+.141227581116286*ii, .588012170670477+.749552564298787*ii, .401652147716105+.0514546352343813*ii, .838735605940478+.420203926467396*ii, .817178126899377+.066716215506022*ii, .342185579780689+.830066519667033*ii, .314453480671745+.285853088914399*ii, .546417901748316+.0811998794988725*ii, .517185956370048+.731126372006946*ii, .605005296992571+.0187722106214805*ii, .0501869727809693+.020248153981514*ii}, 
    {.483797966099686+.297046263457969*ii, .261045907911412+.225135716795708*ii, .58468659653243+.748563007965404*ii, .82571460610916+.229015992426218*ii, .893488589427854+.749300413279697*ii, .749246885429112+.563115392830764*ii, .30491304858537+.431993027907601*ii, .247717299560608+.477117407789586*ii, .566661795942371+.153653958699696*ii, .253496496475421+.769260578650445*ii, .59409726624383+.00844022660220001*ii, .383593155707809+.960875377481708*ii}, 
    {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}},
{{.896373450837465+.254261962356523*ii, .24779929181647+.616718215692397*ii, .76479964813302+.463034947541495*ii, .71382024744359+.270882385355938*ii, .00762741253619703+.259413101727409*ii, .0903143613207694+.680890099867497*ii, .460836094613875+.591780883708612*ii, .119512517050503+.930147837059336*ii, .251302284307528+.543870874662224*ii, .0993960372954212+.720191163163667*ii, .493142740284985+.909400664252634*ii, .665642880535648+.852827625825983*ii},
     {.441914259163129+.107507936964307*ii, .79088218093702+.781717415218602*ii, .354016535255564+.0762543776299193*ii, .520223234502453+.497632519459721*ii, .268308807681157+.110605743291233*ii, .0123757125090849+.22842239150284*ii, .826921375950399+.571124628839407*ii, .935960631001036+.762956922278471*ii, .659872630853333+.722825026153902*ii, .240237180850359+.0252304797727816*ii, .155178033441756+.0222293280515423*ii, .103327384617493+.439350916899106*ii}, 
     {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}},
{{.199729526141268+.224872810881522*ii, .309574367151177+.251182719259492*ii, .774210606944735+.978526747529966*ii, .425287212263736+.3489120159296*ii, .0518559296814775+.530256299482138*ii, .367124774529388+.948276929456038*ii, .180098391667487+.127228831220832*ii, .925809413643661+.0592222610040146*ii, .58287705841079+.925423793965076*ii, .101323373920618+.245226857593363*ii, .104992571728341+.463614429043858*ii, .891987993507508+.740516022595873*ii}, 
    {.460980204606827+.0855748164554617*ii, .843411606946373+.871354493349349*ii, .498806831313409+.235422179536817*ii, .186491241126279+.270775689262831*ii, .556502184613227+.998228262669041*ii, .137044463768838+.816283984043477*ii, .457352375155098+.872353622249129*ii, .685512944036647+.822641265398018*ii, .769470220460002+.910221926023841*ii, .809731841378355+.966312167335556*ii, .999462389660642+.84694279301799*ii, .22258567239409+.372277554267957*ii},
    {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}};

{{.517516508500112+.321202714843489*ii, .936115054955415+.214838920009052*ii, .297046816028768+.660603898172809*ii, .190101906580206+.90350948690542*ii, .130145493233032+.84325360242066*ii, .199402813278602+.944254249251924*ii, .0791685063991048+.420694509534129*ii, .758935717463751+.306572058866584*ii, .0584846126812205+.353477834109037*ii, .304546483606722+.330833817214588*ii, .210021324770644+.321371675320373*ii, .46262860908382+.345569387791368*ii}, {.139247504527893+.632451708953024*ii, .439115797665101+.468760641896129*ii, .344745349392575+.464074920107359*ii, .958723019712957+.907913933767288*ii, .587445623262488+.828210168875036*ii, .793795887350778+.324411955524243*ii, .474901377470528+.654342510938084*ii, .548559980637272+.955237356008654*ii, .310810503619894+.911593177690092*ii, .0976052068992659+.175530615995387*ii, .144129148682396+.0478157777510273*ii, .638373412725738+.0958305821131975*ii}, {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}
{{.969341320097758+.861118414299728*ii, .515794646007598+.151955021927012*ii, .25847321102872+.173732092090163*ii, .0780752338441814+.813513971189482*ii, .986165886183784+.467272707833953*ii, .0282832053149968+.829550856943513*ii, .597901354603222+.315325913655412*ii, .117956547033345+.527923625776914*ii, .0776197493903079+.414352549238854*ii, .609630514243093+.902771685132465*ii, .295676736678409+.875353487693561*ii, .793555503367122+.507859667591162*ii}, {.7104580472845+.0535546017799197*ii, .618195737403568+.434022482650379*ii, .570379248014584+.967004843291154*ii, .264121945781088+.100503528135676*ii, .122639349476488+.853696169022065*ii, .802288552071887+.552189673282824*ii, .849981541965692+.808635958501324*ii, .902348166519029+.872553806577158*ii, .236840159642732+.492457186725009*ii, .14745328164725+.824928278340226*ii, .259156189225496+.423096163532884*ii, .142006967179703+.305322981896567*ii}, {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}
{{.456295796754307+.62344201049272*ii, .140960891675469+.614744581781944*ii, .411445340101421+.993571120822234*ii, .817455761733105+.0861609053630483*ii, .967834505277254+.434537069882462*ii, .921082651607644+.168894317748749*ii, .169750319364274+.229465428967192*ii, .878683683772449+.985243067012088*ii, .63302005439406+.384862476774576*ii, .959151616965884+.178884327736022*ii, .326532172794148+.290754567430101*ii, .764001618976551+.33703872295028*ii}, {.659636697253329+.713579092229929*ii, .78078969613743+.072266722592782*ii, .620245908691085+.307431859596075*ii, .643871769931738+.587349035851981*ii, .838226103144953+.591370228965427*ii, .0176492694970488+.403500507320345*ii, .819935358890047+.49280546067303*ii, .302311390150114+.566572800689203*ii, .149809288931962+.895782147224182*ii, .086027496474296+.640041803839981*ii, .651270077453799+.440371400433144*ii, .297271805774277+.561608022037997*ii}, {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}
{{.524452722623048+.702484309707874*ii, .817854204114035+.138580156726231*ii, .710666740308852+.211814999135787*ii, .236176737117888+.0605718382970459*ii, .973616780804803+.366391651859764*ii, .716368373776975+.809673282753148*ii, .0464376227483011+.723364946524476*ii, .911717321695177+.205048371268558*ii, .560283726614493+.078327290946351*ii, .746691917728604+.425527267537964*ii, .787887573854516+.574476495166786*ii, .116536422534376+.731060372334404*ii}, {.736682784748462+.0723121072487659*ii, .696494476144047+.788733752843723*ii, .25069651098652+.0435360351307913*ii, .158635341234701+.846139803942804*ii, .124381497860694+.493824875960512*ii, .0863544325268879+.960894486308243*ii, .432294620099256+.605642361815678*ii, .648818896815165+.987117892524048*ii, .047354198939897+.268232100023079*ii, .479977664338427+.638728537384398*ii, .537697082684547+.354848433301463*ii, .0268722070641836+.533660692085096*ii}, {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}
{{.206549932352766+.16312979646096*ii, .791115582857019+.308912592437795*ii, .59286481933957+.987585293184382*ii, .420847770249508+.346193443415843*ii, .0975670052690759+.586487746107862*ii, .771077945078546+.648845441246785*ii, .906543312806519+.669319850451399*ii, .920252304648983+.879038808583181*ii, .516995163887634+.344715489103409*ii, .00732982021555473+.741615498840267*ii, .173355287423457+.444596436246856*ii, .133261771712641+.976274382775437*ii}, {.617547496023232+.00414224953074616*ii, .971608923107158+.746880006209596*ii, .503570775052116+.425295288142998*ii, .875572090820488+.120430027327934*ii, .35947668898906+.00184573755313178*ii, .70382406780334+.81248888571796*ii, .982319917612963+.612386400450909*ii, .714117538213803+.481157920070223*ii, .737681026496268+.320150348280548*ii, .522989784920695+.0942665322456091*ii, .0766762459167978+.712657700721745*ii, .12138740029379+.541104739244572*ii}, {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}
{{.202641826669767+.221680945502935*ii, .191995290519822+.399005798667657*ii, .635988961047078+.866644223767465*ii, .35629657529014+.598829056432856*ii, .160180624289418+.541809101446548*ii, .498151248257736+.462963257127254*ii, .334256308895518+.756233859059534*ii, .221914195180755+.791151833622239*ii, .0602839930595968+.577331907129634*ii, .218354190944414+.567756443894181*ii, .579660431060472+.630440178827944*ii, .468464274896472+.978338141056606*ii}, {.0823156895287361+.267393850902623*ii, .687111205372026+.0757169842115925*ii, .697216772587792+.0770144402445926*ii, .526977442652287+.147757698924112*ii, .651150246928576+.583421260242097*ii, .364651953091708+.67907844224601*ii, .05912672059843+.859381190974649*ii, .4196988739119+.674689952652694*ii, .470962851194402+.76077072309807*ii, .313229024744153+.177833524055017*ii, .866608711865921+.41051112973928*ii, .393483156949308+.344257836952814*ii}, {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}
{{.912346268012441+.439662788018493*ii, .0363699586793106+.88735244196797*ii, .209073211500924+.656557552551577*ii, .615980750655046+.305353713312491*ii, .603127891457732+.754842200601247*ii, .0583181383800818+.677287560626309*ii, .670933461494906+.973425217747993*ii, .0811287535090361+.768476170458796*ii, .840146642625049+.522245997287039*ii, .00624563020087532+.35418114121153*ii, .104123603027609+.00470792285850752*ii, .0097591618704933+.348721953131526*ii}, {.533698253010122+.976102214847611*ii, .2916955293838+.566785416314263*ii, .245108044237187+.385481084603583*ii, .387946959129019+.727391240294151*ii, .843712707048968+.0526179672649342*ii, .333047199196701+.617130649943627*ii, .997920615410809+.302300864722148*ii, .49384739116586+.97276894775747*ii, .258708443044947+.902020941967158*ii, .0696609986862685+.772990753010919*ii, .361623769383004+.147518419184729*ii, .555026935644941+.0511574501147343*ii}, {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}
{{.660214444705291+.155720242143902*ii, .41763862223074+.628781650324616*ii, .00941406685111801+.854278001083904*ii, .996220266537857+.524917195859021*ii, .624795077210672+.308481897659002*ii, .554173593670059+.220880230202895*ii, .805923231129214+.367169566012164*ii, .346164307272335+.446236504734576*ii, .361021507293748+.936378395222367*ii, .981181054222148+.863777885460398*ii, .432466216099496+.724288310742619*ii, .302364773217245+.590461852717843*ii}, {.835907488802028+.985870815241486*ii, .125748373007174+.486335569662735*ii, .383865050923388+.707664911893211*ii, .192026053458634+.863766285037365*ii, .959615344028279+.405573806802489*ii, .959814449729351+.0405520270631556*ii, .364334049286148+.751491770081692*ii, .200575233580788+.489411057248321*ii, .340448951882657+.970997519761726*ii, .821085091161793+.6513678426773*ii, .19879238270685+.782264549070881*ii, .668617621885839+.0527036163174259*ii}, {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}
{{.735433001684256+.197146987366018*ii, .184328185643985+.509828573987497*ii, .143453062336649+.705485454945103*ii, .863655017485824+.506395028584342*ii, .0113156601063512+.423355957092053*ii, .557591463775466+.989439090322088*ii, .0799630276033155+.476073415325417*ii, .208787615137657+.262636722398711*ii, .0924673640110649+.354235736499159*ii, .189454672454851+.371319012601322*ii, .614417484750423+.512283841402879*ii, .196823502845429+.267055670163265*ii}, {.942214092049967+.626502504081083*ii, .245461744883179+.523035618551962*ii, .923038673432196+.960285928923294*ii, .606961596759153+.686736130883588*ii, .69559519907556+.929196995440667*ii, .856486320663991+.534254151771285*ii, .023731464128792+.374819186564552*ii, .555480541262622+.736449315468524*ii, .364281326958922+.437751121067416*ii, .420711716513202+.165192762581537*ii, .881186340542381+.209894973774398*ii, .53658030189383+.568966895013808*ii}, {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}
{{.0384233363825101+.484196883858437*ii, .277095130355358+.630362281989215*ii, .920700336696933+.601312315110305*ii, .656687847720752+.435352747736838*ii, .538022422325486+.972372725517247*ii, .610680727041923+.730573795157265*ii, .620488762977699+.971464166314264*ii, .658421084390815+.638038500840582*ii, .427482889350883+.734502626252998*ii, .361520235054303+.367970145749995*ii, .353673616185724+.165894469602226*ii, .378436979029438+.122964829999201*ii}, {.481599027431752+.935906847209515*ii, .573978201812827+.374296291005528*ii, .786125172290121+.0670728094584666*ii, .35600612376753+.159752266099695*ii, .729732460681121+.16188303022346*ii, .264005069546371+.990263707094415*ii, .878892014531742+.200485754785696*ii, .217307565652387+.524857062364101*ii, .259635532692605+.551961205563264*ii, .444747107214677+.356494317895382*ii, .871165373703333+.0721109642214334*ii, .410727781448608+.247139349254168*ii}, {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}
{{.607254175242829+.59855547229953*ii, .58079169569301+.57267216984191*ii, .519517399134535+.0524009821249455*ii, .728844299300285+.645367783378882*ii, .0124480283515174+.619101660060358*ii, .586654114622611+.232970970412966*ii, .93868745984456+.449527727248534*ii, .715588461829397+.136194905375312*ii, .00842928055181424+.716184246194676*ii, .731048322978452+.900082822648206*ii, .990290498451371+.0536228835047502*ii, .149841496448051+.0777208442194016*ii}, {.214417834878485+.224819498371966*ii, .736900716303233+.986276880874099*ii, .0533291371115605+.752652632052615*ii, .0143958615495955+.813765329228643*ii, .211843825683982+.239785259738234*ii, .491010747938152+.282467138903262*ii, .771376590372279+.223448392135939*ii, .576699354606549+.645602703320396*ii, .496767708675078+.993931663792665*ii, .741607780876612+.710733318655598*ii, .0442097292508585+.798311668466116*ii, .586792169217752+.688561664153065*ii}, {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}
{{.624874281093604+.767844802334263*ii, .203901314986693+.551253328999151*ii, .250684689702152+.988378836824386*ii, .486328954313175+.820996200109521*ii, .346415692459742+.189677334456357*ii, .998677263617385+.0385651122580697*ii, .633622687742635+.0298074262940038*ii, .249383551071388+.07384482587261*ii, .415753673640826+.0654304061539329*ii, .709408915504302+.487961541743788*ii, .25269229098514+.0942159665248881*ii, .504827891260732+.848921710296529*ii}, {.471361600821557+.282164847503865*ii, .0350179460759795+.212232052108116*ii, .556639597864439+.173818729114411*ii, .272908576166825+.664700456826792*ii, .54118034052836+.295672636434769*ii, .912854258789045+.146625068547455*ii, .874315391653465+.669648188314415*ii, .511965756400957+.327285995368831*ii, .186985491405398+.169791124853725*ii, .21597234780859+.906166514180199*ii, .503802388315963+.481509881043287*ii, .0296212698799677+.958457632234836*ii}, {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}
{{.0498664544708899+.332623518332163*ii, .144537644784117+.261832111738616*ii, .38511174474005+.318890768136871*ii, .747446781597172+.378537769887292*ii, .0167957121455233+.568809292376649*ii, .825702310498885+.944218168644649*ii, .1058191467196+.624318041500754*ii, .220246995591742+.305947096517755*ii, .82560355586512+.00345491576441037*ii, .666472159118165+.911505718570409*ii, .138055789773723+.951302844505648*ii, .682506831572397+.426996319192288*ii}, {.639316369386413+.895491305289446*ii, .0197505128025343+.766045894670561*ii, .276271233877356+.328805558424675*ii, .00148740229316557+.40135370138162*ii, .683776038101979+.462566715098293*ii, .121887128864756+.531333566439186*ii, .87239699221655+.94026503650098*ii, .796708172227246+.489931789033299*ii, .833979448618337+.265017953535739*ii, .600001705231717+.463411446880672*ii, .705839295667246+.754191435222824*ii, .152403059446341+.825388405595052*ii}, {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}
{{.922917367408999+.558023738392722*ii, .21581034259859+.38210125049761*ii, .751956175433519+.72804434583787*ii, .194265347826058+.514563469899862*ii, .651706745693735+.253197150988521*ii, .480722290729976+.250918593005634*ii, .439984637728688+.250473988383153*ii, .167635903698801+.878459572597639*ii, .363158432894146+.361072176971383*ii, .166965617257224+.359504339542731*ii, .083044482132415+.274574002843514*ii, .401345754961158+.81583077701162*ii}, {.414316353681768+.749096256406717*ii, .306395478016033+.795050029399692*ii, .0964687610496066+.839710103124944*ii, .218459933774474+.781142398601903*ii, .842168619760282+.996770957449975*ii, .258930294684391+.690361622066606*ii, .548613874922478+.179849314057583*ii, .248819693119852+.308242576861199*ii, .500801652872303+.0304796008147981*ii, .643038880665751+.285059569187341*ii, .527274383345221+.641024064085795*ii, .242977972976666+.882099019592332*ii}, {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}
{{.968261808089695+.800085133524882*ii, .106522144899285+.0822154415092503*ii, .258520096827975+.150482172754859*ii, .0875204726889711+.557518431056515*ii, .209092338526085+.893015587404469*ii, .302333463133334+.0538658220799767*ii, .807465761698727+.291010717007339*ii, .943541674550195+.85636534741685*ii, .463841886131068+.69119396070706*ii, .563176131164823+.75062234287668*ii, .77304879708182+.247721017091429*ii, .13960748714491+.440145129145369*ii}, {.454424176644+.234727845069252*ii, .923478317830261+.461649973613997*ii, .875939644060594+.31790338565597*ii, .573774343158803+.255337090449802*ii, .246361516989414+.466731515131598*ii, .436806471748015+.740542934466788*ii, .49827559171038+.093676659223516*ii, .3734761920215+.0275009193125088*ii, .509757369066897+.0467804025798166*ii, .49732412526687+.477965152303789*ii, .156340367253981+.900314690280601*ii, .845352615051189+.961160357873345*ii}, {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}
{{.108977379297633+.199941187187205*ii, .208272397764887+.201599570654262*ii, .988308847161725+.601396283279561*ii, .115485815619522+.37700230172456*ii, .140164232804773+.0750227769245282*ii, .310157033091536+.136912490298581*ii, .338324776450332+.956011993728493*ii, .343112555271642+.811378314112181*ii, .832052033563043+.817963697935484*ii, .403346434512009+.642533734037892*ii, .915375695435541+.438433557208977*ii, .819761668560498+.933156453248141*ii}, {.743583577454336+.758815774587884*ii, .905103854009083+.755771490807897*ii, .402700530191295+.202081395808234*ii, .171677519134401+.0665371820012489*ii, .292203670555843+.566056630197591*ii, .285366758451989+.766113031378943*ii, .23526067906904+.94639215030997*ii, .602691688549448+.600150810578527*ii, .630109919989624+.838360353008945*ii, .0978799639989143+.266859267104905*ii, .667078129639239+.702921738437709*ii, .289110786915226+.870018808623096*ii}, {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}
{{.685674966143474+.23253859030844*ii, .878517914446149+.0900296296980067*ii, .343046587932982+.649932370956443*ii, .238985208551836+.755880170715466*ii, .722541357172236+.461066527462165*ii, .336219988995181+.0269197386524735*ii, .092050863405453+.472235567541647*ii, .35431564550113+.505651903738067*ii, .46281296656064+.341418463228592*ii, .533944270335149+.498533665318022*ii, .434318200670089+.768992877475128*ii, .405078459932032+.665029514766616*ii}, {.966939046096358+.576070794711944*ii, .723622446068512+.239094979081975*ii, .648301569873395+.617821660427289*ii, .763882218810258+.903206146547095*ii, .0288108181918157+.0917138407298278*ii, .615669469253284+.425922539874791*ii, .434964094044311+.329926061278201*ii, .738068880555223+.643447922182226*ii, .869214121217137+.994202196654677*ii, .465579874366991+.513346778294258*ii, .898714886889346+.301148877443289*ii, .487412963683866+.794669905955014*ii}, {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}
{{.196379921664114+.843802243708053*ii, .871274108199508+.385240002911595*ii, .37391893222804+.584128808906096*ii, .135128732398082+.844446073783237*ii, .3638605806878+.926881993327752*ii, .267411121387689+.284006899867476*ii, .335240152636942+.0660623209441658*ii, .631078471714142+.338837816812163*ii, .0642395433899429+.966643694247957*ii, .336592719765001+.542916699906534*ii, .860453208984093+.445429759023284*ii, .715019137463606+.456797945868985*ii}, {.275527740310163+.0403225361169944*ii, .503639325849664+.123612795547872*ii, .425654975359515+.808401757625889*ii, .0322900292562847+.872335411593407*ii, .62302595222955+.328331142628853*ii, .369900050185877+.774207832032116*ii, .685287955484174+.959132344749206*ii, .364472165876181+.0121187744418519*ii, .558356646922466+.53821929330152*ii, .746962867210318+.795090427129194*ii, .564149210437975+.40463340658331*ii, .429772775625427+.884227190918172*ii}, {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}
{{.906439120212555+.786214982345962*ii, .863698727992897+.839398683491014*ii, .81921429837887+.112536871802219*ii, .321411926175812+.0683772585316422*ii, .0302058222117281+.724001799607857*ii, .462042213479469+.0943491811791857*ii, .747297451625724+.605661208228143*ii, .105158503412566+.596646289898681*ii, .846679264160043+.51799474180887*ii, .79387075073758+.687423166842294*ii, .515856410545472+.597485151031003*ii, .480768889969274+.112168698954923*ii}, {.820871951213801+.229709020407242*ii, .705681422409843+.236770057034538*ii, .0268859856457214+.0933804875657126*ii, .4286009611505+.370109565681417*ii, .6072720084934+.477393391500129*ii, .474325214919067+.490033354245852*ii, .0520857415319762+.997389498578102*ii, .567721644401644+.540316258039502*ii, .553089256079682+.552314101021843*ii, .297120336210865+.0199256159893146*ii, .5932761047281+.319127997340873*ii, .191772145527499+.380307070814682*ii}, {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}
{{.4474588597735+.258512763666989*ii, .55040024481685+.4980571341511*ii, .0794841231474731+.429527957713268*ii, .267192958734396+.82410644595029*ii, .103254957936906+.495830175054721*ii, .481909300133579+.84027922474588*ii, .293806362720462+.871176423920013*ii, .550978382694591+.369213753840555*ii, .945765845662778+.523674064978366*ii, .81864381423423+.0949397007102663*ii, .302228604217173+.69355189013869*ii, .173159149109498+.329667099414734*ii}, {.693538917107594+.241666023433075*ii, .155642589820794+.724242802616346*ii, .697945389189873+.203073324519956*ii, .635316337600415+.0873141971177912*ii, .74774486815457+.725799744057377*ii, .00234915909245137+.835497079698099*ii, .252474887953589+.152749629198149*ii, .821481829728661+.115998502837103*ii, .24983313882404+.550532218192812*ii, .277729953427194+.233163471081869*ii, .0550087259123029+.0996342247395456*ii, .378058081651535+.631539658929802*ii}, {.0400937+.0117529*ii, .00539081+.026916*ii, -.0106115+.0485923*ii, .0670329+.0201258*ii, .056302+.0222341*ii, -.0326684+.0681606*ii, .0271186-.00355098*ii, -.0040732+.0616021*ii, .0617405-.0293142*ii, .018965-.0335098*ii, -.00578829-.00842445*ii, .000360714-.000118149*ii}}

topR2Dir=r2Dir
--
twentyLoops=for i to 20-1 list transpose for i in mVal list {random CC,random CC,i};
for i in twentyLoops do print i
#first first twentyLoops
onlyOneMove={first mVal,.0001*ii,-.0001,-.0001*ii,.0001,first mVal}
setLoop={( for i to 6-1 list {onlyOneMove_i}|drop(mVal,1))};
#first first setLoop


for RLIndex from 20-2+33+1 to 20-2+33+1 do (
--RLIndex=0;
print ("RLIndex",RLIndex);
RLIndex=RLIndex+1;
setLoop=twentyLoops_(RLIndex-52);
r2Dir=topR2Dir|"/RL"|RLIndex;
if not fileExists(r2Dir) then mkdir(r2Dir);
moveB'File(topR2Dir,"input","input",MoveToDirectory=>r2Dir,CopyB'File=>true);
moveB'File(topR2Dir,"input_Image_Map_JADE","input_Image_Map_JADE",MoveToDirectory=>r2Dir,CopyB'File=>true);
writeParameterFile(r2Dir,mVal,NameParameterFile=>"start_parameters");
writeStartFile(r2Dir,setStart);
runBertini(r2Dir,NameB'InputFile=>"input_Image_Map_JADE");
loopSymXCoords=flatten importSolutionsFile(r2Dir,NameSolutionsFile=>"function");
keepGoing=true;
quarterCount=1;
print "huh";
while keepGoing do(
--First segment
  writeParameterFile(r2Dir,setLoop_0,NameParameterFile=>"final_parameters");
  runBertini(r2Dir);
  moveB'File(r2Dir,"finite_solutions","start");
  moveB'File(r2Dir,"final_parameters","start_parameters");
--Second Segment
  writeParameterFile(r2Dir,setLoop_1,NameParameterFile=>"final_parameters");
  runBertini(r2Dir);
  moveB'File(r2Dir,"finite_solutions","start");
  moveB'File(r2Dir,"final_parameters","start_parameters");
--Third segment to complete triangle loop.
  writeParameterFile(r2Dir,setLoop_2,NameParameterFile=>"final_parameters");
  runBertini(r2Dir);
  moveB'File(r2Dir,"finite_solutions","start");
  moveB'File(topR2Dir,"start_parameters1","start_parameters",MoveToDirectory=>r2Dir,CopyB'File=>true);  
--Map point with Bertini by alpha using the preprocessed input_Image_Map_JADE
  runBertini(r2Dir,NameB'InputFile=>"input_Image_Map_JADE");
--Save the end point of the loop.
  moveB'File(r2Dir,"start","start"|"RL"|toString RLIndex|"S"|toString(#loopSymXCoords),CopyB'File=>true);
--Import the alpha coordinate   
  oneSymXCoord=flatten importSolutionsFile(r2Dir,NameSolutionsFile=>"function");
--Test to see if the newly imported alpha coordiate has already been found. 
----If testNewCoordMembership is false then we append this coordinate to our list of alpha coordinates loopSymXCoords.
----If testNewCoordMembership is true then we write the alpha coordinates we have compute to loopCoords.
  if testNewCoordMembership(oneSymXCoord_0,loopSymXCoords)  
  then keepGoing=false
  else (loopSymXCoords=loopSymXCoords|oneSymXCoord);
  if #loopSymXCoords>quarterCount*25 or not keepGoing 
  then (
    writeStartFile(r2Dir,{loopSymXCoords},NameStartFile=>("loopCoords"|toString RLIndex|"_"|toString(#loopSymXCoords)));
    moveB'File(r2Dir,"start","start"|"L"|toString RLIndex|"S"|toString(#loopSymXCoords),CopyB'File=>true);
    quarterCount=quarterCount+1))
)


---
yList0=flatten importSolutionsFile(r2Dir,NameSolutionsFile=>"loopCoords0_4929");
yList1=flatten importSolutionsFile(r2Dir,NameSolutionsFile=>"loopCoords1_3954");
yList2=flatten importSolutionsFile(r2Dir,NameSolutionsFile=>"loopCoords2_5088");
setYFiber=yList0;
r2Dir

loopFiber=3
loopAux=9--Complete: 1,2,8,
setLoop=allLoops_loopFiber;
--oldLoopNumber=3
--loopNumber=0
dirStore="/Users/jo/Desktop/Dump/NewRound/RL"|loopAux
r2Dir="/Users/jo/Desktop/Dump/NewRound/RL"|loopFiber
--setYFiber=flatten importSolutionsFile(r2Dir,NameSolutionsFile=>"loopCoords3_7210");
solAux1=radicalList((flatten for i from 1 to 4090 list if fileExists("/Users/jo/Desktop/Dump/NewRound/RL3/loopCoordsL_1R_"|i|"_Final") 
  then flatten importSolutionsFile("/Users/jo/Desktop/Dump/NewRound/RL3",NameSolutionsFile=>"loopCoordsL_1R_"|i|"_Final") else {}),1e-10);
solAux2=radicalList((flatten for i from 1 to 2551 list if fileExists("/Users/jo/Desktop/Dump/NewRound/RL3/loopCoordsL_2R_"|i|"_Final") 
  then flatten importSolutionsFile("/Users/jo/Desktop/Dump/NewRound/RL3",NameSolutionsFile=>"loopCoordsL_2R_"|i|"_Final") else {}),1e-10);
solAux8=radicalList((flatten for i from 1 to 595 list if fileExists("/Users/jo/Desktop/Dump/NewRound/RL3/loopCoordsL_8R_"|i|"_Final") 
  then flatten importSolutionsFile("/Users/jo/Desktop/Dump/NewRound/RL3",NameSolutionsFile=>"loopCoordsL_8R_"|i|"_Final") else {}),1e-10);
setYFiber=radicalList(setYFiber,1e-10);
--setYFiber=radicalList(setYFiber,1e-10);
#setYFiber
 
for loopRepeat to 3132-1 do (
  setSol=importSolutionsFile(dirStore,NameSolutionsFile=>"startRL"|loopAux|"S"|(loopRepeat+1));
  writeStartFile(r2Dir,setSol);  
  writeParameterFile(r2Dir,mVal,NameParameterFile=>"start_parameters");
  runBertini(r2Dir,NameB'InputFile=>"input_Image_Map_JADE");
  newYCoord=flatten importSolutionsFile(r2Dir,NameSolutionsFile=>"function");
  loopSymXCoords=newYCoord;
  if not testNewCoordMembership(first newYCoord, setYFiber) 
  then(   
    keepGoing=true;
    quarterCount=1;    
    while keepGoing do(
--First segment
  writeParameterFile(r2Dir,setLoop_0,NameParameterFile=>"final_parameters");
  runBertini(r2Dir);
  moveB'File(r2Dir,"finite_solutions","start");
  moveB'File(r2Dir,"final_parameters","start_parameters");
--Second Segment
  writeParameterFile(r2Dir,setLoop_1,NameParameterFile=>"final_parameters");
  runBertini(r2Dir);
  moveB'File(r2Dir,"finite_solutions","start");
  moveB'File(r2Dir,"final_parameters","start_parameters");
--Third segment to complete triangle loop.
  writeParameterFile(r2Dir,setLoop_2,NameParameterFile=>"final_parameters");
  runBertini(r2Dir);
  moveB'File(r2Dir,"finite_solutions","start");
  moveB'File(r2Dir,"start","start"|"L_"|loopAux|"R_"|loopRepeat|"S_"|toString(#loopSymXCoords),CopyB'File=>true);
  moveB'File(r2Dir,"start_parameters1","start_parameters",CopyB'File=>true);  
--Map point with Bertini by alpha using the preprocessed input_Image_Map_JADE
  runBertini(r2Dir,NameB'InputFile=>"input_Image_Map_JADE");
--Import the alpha coordinate   
  oneSymXCoord=flatten importSolutionsFile(r2Dir,NameSolutionsFile=>"function");
--Test to see if the newly imported alpha coordiate has already been found. 
----If testNewCoordMembership is false then we append this coordinate to our list of alpha coordinates loopSymXCoords.
----If testNewCoordMembership is true then we write the alpha coordinates we have compute to loopCoords.
  if testNewCoordMembership(oneSymXCoord_0,loopSymXCoords)
  then keepGoing=false
  else (loopSymXCoords=loopSymXCoords|oneSymXCoord);
  if #loopSymXCoords>quarterCount*25 or not keepGoing 
  then (
    writeStartFile(r2Dir,{loopSymXCoords},NameStartFile=>("loopCoords"|"L_"|loopAux|"R_"|loopRepeat|"_"|"Final"));
--    moveB'File(r2Dir,"start","start"|"L_"|loopAux|"R_"|loopRepeat|"S_"|toString(#loopSymXCoords),CopyB'File=>true);
    quarterCount=quarterCount+1)));
  setYFiber=setYFiber|loopSymXCoords
  )

writeStartFile(r2Dir,{setYFiber},NameStartFile=>"soFar")

#setYFiber

setYFiber=radicalList(setYFiber,1e-10);
    
collectFiber=radicalList(setYFiber|yList1|yList2,1e-10);
#collectFiber

#setYFiber


 
--END--------------------------------------------------------------------------------


testNewCoordMembership=(oneCoord,allCoords)->(
  keepTesting:=true;
  testCoord:=0;
  testOutput:=true;
  while keepTesting do(
    if abs(oneCoord-allCoords_testCoord)<1e-8 then keepTesting=false;
    testCoord=testCoord+1;
    if testCoord==#allCoords then (
      keepTesting=false;
      testOutput=false));
  return testOutput)--returns false if a new coordinate. 
      
